extract_data <- ddply(org_units , .(org_unit_ID) ,
function(org_units){
print(as.character(org_units$org_unit_ID))
url_call <- make_extract_call(base_url ,
data_sets , org_units ,
deb_period , end_period)
out <- data.frame(data_element_ID = org_units$org_unit_ID,
period = character() ,
org_unit_ID = character(),
value = character() ,
category = character() ,
last_update = character())
try({out <- extract_data(url_call , userID , password)})
print(out)
out
} ,
.progress = 'win'
)
extract_data
}
extract_all_data <- function(base_url , data_sets , org_units , deb_period , end_period ,
userID , password){
extract_data <- ddply(org_units , .(org_unit_ID) ,
function(org_units){
print(as.character(org_units$org_unit_ID))
url_call <- make_extract_call(base_url ,
data_sets , org_units ,
deb_period , end_period)
out <- data.frame(data_element_ID = org_units$org_unit_ID,
period = character() ,
org_unit_ID = character(),
value = character() ,
category = character() ,
last_update = character())
print(out)
try({out <- extract_data(url_call , userID , password)})
out
} ,
.progress = 'win'
)
extract_data
}
extract_all_data <- function(base_url , data_sets , org_units , deb_period , end_period ,
userID , password){
extract_data <- ddply(org_units , .(org_unit_ID) ,
function(org_units){
print(as.character(org_units$org_unit_ID))
url_call <- make_extract_call(base_url ,
data_sets , org_units ,
deb_period , end_period)
out <- data.frame(data_element_ID = org_units$org_unit_ID,
period = '' ,
org_unit_ID = '',
value = '' ,
category = '' ,
last_update = '')
print(out)
try({out <- extract_data(url_call , userID , password)})
out
} ,
.progress = 'win'
)
extract_data
}
setwd('C:/Users/grlurton/Documents/DRCHRH')
stage <- 'modelisation'
source('code/useful_functions.r')
data <- subset(total_revenu , FacilityType %in% c('cs' , 'csr') & !(FacOwnership == 'privee'))
data$variable[data$variable %in% c("Activité non santé" , "Autres revenus")] <- "Autres revenus"
data$variable[data$variable %in% c('Cadeau'  , 'Vente de Medicament')] <- 'Informel'
table(data$FacRurban)
table(data$FacilityType)
table(facilities$FacLevel)
facil_data <- subset(facilities , Structure %in% data$Structure)
facsDesc <- ddply(facil_data , .(Province) ,
function(x) table(x$FacLevel , x$FacRurban))
facsDesc
facsDesc <- ddply(facil_data , .(Province , FacLevel) ,
function(x) table(x$FacRurban))
facil_data$FacLevel
table(facil_data$FacLevel)
facil_data <- subset(facilities , Structure %in% data$Structure & FacLevel != 'hgr')
facil_data
facsDesc <- ddply(facil_data , .(Province , FacLevel) ,
function(x) table(x$FacRurban))
facsDesc
data <- subset(total_revenu , FacilityType %in% c('cs' , 'csr')
#& !(FacOwnership == 'privee')
)
facil_data <- subset(facilities , Structure %in% data$Structure & FacLevel != 'hgr')
facsDesc <- ddply(facil_data , .(Province , FacLevel) ,
function(x) table(x$FacRurban))
facsDesc
49 + 5 + 10
22 + 1 + 9 + 3 + 10 + 10 + 7 + 1
write.csv(facsDesc , '../../Desktop/facilities_dist.csv')
data <- subset(total_revenu , FacilityType %in% c('cs' , 'csr')
& !(FacOwnership == 'privee')
)
data$variable[data$variable %in% c("Activité non santé" , "Autres revenus")] <- "Autres revenus"
data$variable[data$variable %in% c('Cadeau'  , 'Vente de Medicament')] <- 'Informel'
facil_data <- subset(facilities , Structure %in% data$Structure & FacLevel != 'hgr')
facsDesc <- ddply(facil_data , .(Province , FacLevel) ,
function(x) table(x$FacRurban))
write.csv(facsDesc , '../../Desktop/facilities_dist.csv')
sum(fascDesc)
sum(facsDesc)
extract_data()
extract_data
extract_all_data()
extract_all_data
?ddply
load('../../../Desktop/extrated_content.Rdata')
rm(url , url_page)
rm(ss , userID , password , page , out)
rm(root , org_units_list ,extracted_content)
load('../../../Desktop/extrated_content.Rdata')
View(dd)
dimnames(extracted_content)
names(extracted_content)
head(extracted_content[[1]])
head(extracted_content[[2]])
head(extracted_content[[3]])
head(extracted_content[[4]])
head(extracted_content[[5]])
head(extracted_content[[6]])
head(extracted_content[[7]])
data_sets <- extracted_content[[1]]
data_elements <- extracted_content[[2]]
org_units <- extracted_content[[3]]
org_units_metas <- extracted_content[[4]]
org_units_groups <- extracted_content[[5]]
org_units_reports <- extracted_content[[6]]
colnames(org_units_groups)
table(org_units_groups)
table(org_units_groups$group_name)
sort(table(org_units_groups$group_name))
sort(table(data_elements$data_element_name))
sort(table(org_units_groups$group_name))
fac_level <- c('Dispensary' , 'Private Institution' ,
'Medical Clinic' , 'Community Unit' , 'Health Centre' ,
'Hospital' , 'Non-Governmental Organisation' , 'Nursing Home' ,
'Faith Based Organisation')
table(org_units_groups$group_name , data_elements$data_element_name)
ls()
unique(data_elements)
unique(data_elements$data_element_name)
unique(as.character(data_elements$data_element_name))
colnames(data_sets)
colnames(data_elements)
data_elements_reports <- merge(data_sets , data_elements ,
by = "datasets_ID" , )
unique(data_elements_reports$datasets_name.x)
data_sets_names <- unique(data_sets$datasets_name)
data_sets_names
write.csv(data_sets_names , '../../../Desktop/dataset_names.csv')
data_sets <- dlply(data_elements , .(datasets_ID) ,
function(data) unique(data$data_element_name)
)
library(dlply)
library(plyr)
data_sets <- dlply(data_elements , .(datasets_ID) ,
function(data) unique(data$data_element_name)
)
data_sets
data_elements_full <- merge(data_elements , data_sets , by= 'datasets_ID')
data_sets <- extracted_content[[1]]
data_elements_full <- merge(data_elements , data_sets , by= 'datasets_ID')
data_sets_indic <- dlply(data_elements_full , .(datasets_name) ,
function(data) sort(unique(data$data_element_name))
)
data_sets_indic <- dlply(data_elements , .(datasets_name) ,
function(data) sort(unique(data$data_element_name))
)
data_sets_indic
data_sets_indic <- dlply(data_elements , .(datasets_name) ,
function(data) sort(unique(as.character(data$data_element_name)))
)
data_sets_indic
install.packages("XLConnect")
library("XLConnect")
library("XLConnect")
library("XLConnectJars", lib.loc="~/R/win-library/3.1")
library("XLConnect", lib.loc="~/R/win-library/3.1")
remove.packages("XLConnect", lib="~/R/win-library/3.1")
remove.packages("XLConnectJars", lib="~/R/win-library/3.1")
remove.packages("rJava", lib="~/R/win-library/3.1")
install.packages('xslx')
library("xlsx")
install.packages('xlsx')
library("xlsx")
library("xlsx")
library("xlsx")
library(xlsx)
library(xlsx)
load('../../../Desktop/extrated_content.Rdata')
data_sets <- extracted_content[[1]]
data_elements <- extracted_content[[2]]
org_units <- extracted_content[[3]]
org_units_metas <- extracted_content[[4]]
org_units_groups <- extracted_content[[5]]
org_units_reports <- extracted_content[[6]]
head(org_units_metas$coordinates)
head(as.character(org_units_metas$coordinates))
head(gsub('[|]', '' , as.character(org_units_metas$coordinates)))
head(gsub('[', '' , as.character(org_units_metas$coordinates)))
head(gsub('\[|\]', '' , as.character(org_units_metas$coordinates)))
head(gsub('\\[|\\]', '' , as.character(org_units_metas$coordinates)))
org_units_metas$coordinates <- gsub('\\[|\\]', '' ,
as.character(org_units_metas$coordinates))
head(org_units_metas$coordinates)
?strsplit
strsplit(org_units_metas$coordinates , ',')
string_coordinates <- org_units_metas$coordinates
splitcoord <- unlist(strsplit(as.character(string_coordinates[,1]) , "," , fixed = TRUE))
splitcoord <- unlist(strsplit(as.character(string_coordinates) , "," , fixed = TRUE))
splitcoord
splitcoord <- strsplit(as.character(string_coordinates) , "," , fixed = TRUE)
splitcoord
?subset
length(splitcoord[[9998]])
tabGPS <- function(string_coordinates){
string_coordinates <- gsub('\\[|\\]', '' , as.character(string_coordinates))
splitcoord <- strsplit(as.character(string_coordinates) , "," , fixed = TRUE)
for(i in 1:length(splitcoord)){
coords <- length(splitcoord[[i]])
if(coords == 2){
org_units_points <- splitcoord[[i]]
}
org_units_points
}
}
tabGPS <- function(string_coordinates){
string_coordinates <- gsub('\\[|\\]', '' , as.character(string_coordinates))
splitcoord <- strsplit(as.character(string_coordinates) , "," , fixed = TRUE)
for(i in 1:length(splitcoord)){
coords <- length(splitcoord[[i]])
if(coords == 2){
org_units_points <- splitcoord[[i]]
}
}
org_units_points
}
kk <- ddply(org_units_metas , .(org_unit_ID) ,
function(ddd) tabGPS(ddd))
library(plyr)
kk <- ddply(org_units_metas , .(org_unit_ID) ,
function(ddd) tabGPS(ddd))
tabGPS <- function(string_coordinates){
string_coordinates <- gsub('\\[|\\]', '' , as.character(string_coordinates))
splitcoord <- strsplit(as.character(string_coordinates) , "," , fixed = TRUE)
for(i in 1:length(splitcoord)){
coords <- length(splitcoord[[i]])
if(coords == 2){
org_units_points <- splitcoord[[i]]
}
else org_units_points <- data.frame(NA , NA)
}
org_units_points
}
kk <- ddply(org_units_metas , .(org_unit_ID) ,
function(ddd) tabGPS(ddd))
kk
tabGPS <- function(string_coordinates){
string_coordinates <- gsub('\\[|\\]', '' , as.character(string_coordinates))
splitcoord <- strsplit(as.character(string_coordinates) , "," , fixed = TRUE)
for(i in 1:length(splitcoord)){
coords <- length(splitcoord[[i]])
print(coords)
if(coords == 2){
org_units_points <- splitcoord[[i]]
}
else org_units_points <- data.frame(NA , NA)
}
org_units_points
}
kk <- ddply(org_units_metas , .(org_unit_ID) ,
function(ddd) tabGPS(ddd))
table(kk$NA.)
table(kk$NA..1)
splitcoord <- strsplit(as.character(string_coordinates) , "," , fixed = TRUE)
splitcoord
i <- 10000
coords <- length(splitcoord[[i]])
coords
org_units_points <- splitcoord[[i]]
org_units_points
data.frame(org_units_points)
data.frame(t(org_units_points))
tabGPS <- function(string_coordinates){
string_coordinates <- gsub('\\[|\\]', '' , as.character(string_coordinates))
splitcoord <- strsplit(as.character(string_coordinates) , "," , fixed = TRUE)
for(i in 1:length(splitcoord)){
coords <- length(splitcoord[[i]])
print(coords)
if(coords == 2){
org_units_points <- splitcoord[[i]]
data.frame(t(org_units_points))
}
else org_units_points <- data.frame(X1 = NA,X2 = NA)
}
org_units_points
}
kk <- ddply(org_units_metas , .(org_unit_ID) ,
function(ddd) tabGPS(ddd))
kk
table(kk$X1)
tabGPS <- function(string_coordinates){
string_coordinates <- gsub('\\[|\\]', '' , as.character(string_coordinates))
splitcoord <- strsplit(as.character(string_coordinates) , "," , fixed = TRUE)
for(i in 1:length(splitcoord)){
coords <- length(splitcoord[[i]])
print(coords)
if(coords == 2){
org_units_points <- splitcoord[[i]]
org_units_points <- data.frame(t(org_units_points))
}
else org_units_points <- data.frame(X1 = NA,X2 = NA)
}
org_units_points
}
kk <- ddply(org_units_metas , .(org_unit_ID) ,
function(ddd) tabGPS(ddd))
table(kk$X1)
tabGPS <- function(string_coordinates){
string_coordinates <- gsub('\\[|\\]', '' , as.character(string_coordinates))
splitcoord <- strsplit(as.character(string_coordinates) , "," , fixed = TRUE)
for(i in 1:length(splitcoord)){
coords <- length(splitcoord[[i]])
print(coords)
if(coords == 2){
org_units_points <- splitcoord[[i]]
org_units_points <- data.frame(t(org_units_points))
}
if(coords != 2){org_units_points <- data.frame(X1 = NA,X2 = NA)}
}
org_units_points
}
kk <- ddply(org_units_metas , .(org_unit_ID) ,
function(ddd) tabGPS(ddd))
table(kk$X1)
t(org_units_points)
data.frame(t(org_units_points))
tabGPS <- function(string_coordinates){
string_coordinates <- gsub('\\[|\\]', '' , as.character(string_coordinates))
splitcoord <- strsplit(as.character(string_coordinates) , "," , fixed = TRUE)
for(i in 1:length(splitcoord)){
coords <- length(splitcoord[[i]])
if(coords == 2){
org_units_points <- splitcoord[[i]]
org_units_points <- data.frame(t(org_units_points))
print(org_units_points)
}
if(coords != 2){org_units_points <- data.frame(X1 = NA,X2 = NA)}
}
print(org_units_points)
org_units_points
}
kk <- ddply(org_units_metas , .(org_unit_ID) ,
function(ddd) tabGPS(ddd))
tabGPS <- function(string_coordinates){
string_coordinates <- gsub('\\[|\\]', '' , as.character(string_coordinates))
splitcoord <- strsplit(as.character(string_coordinates) , "," , fixed = TRUE)
coords <- length(splitcoord[[i]])
if(coords == 2){
org_units_points <- splitcoord[[i]]
org_units_points <- data.frame(t(org_units_points))
print(org_units_points)
}
if(coords != 2){org_units_points <- data.frame(X1 = NA,X2 = NA)}
print(org_units_points)
org_units_points
}
kk <- ddply(org_units_metas , .(org_unit_ID) ,
function(ddd) tabGPS(ddd))
tabGPS <- function(string_coordinates){
string_coordinates <- gsub('\\[|\\]', '' , as.character(string_coordinates))
splitcoord <- strsplit(as.character(string_coordinates) , "," , fixed = TRUE)
coords <- length(splitcoord)
if(coords == 2){
org_units_points <- splitcoord
org_units_points <- data.frame(t(org_units_points))
print(org_units_points)
}
if(coords != 2){org_units_points <- data.frame(X1 = NA,X2 = NA)}
print(org_units_points)
org_units_points
}
kk <- ddply(org_units_metas , .(org_unit_ID) ,
function(ddd) tabGPS(ddd))
tabGPS <- function(string_coordinates){
string_coordinates <- gsub('\\[|\\]', '' , as.character(string_coordinates))
splitcoord <- strsplit(as.character(string_coordinates) , "," , fixed = TRUE)
coords <- length(splitcoord)
print(coords)
if(coords == 2){
org_units_points <- splitcoord
org_units_points <- data.frame(t(org_units_points))
print(org_units_points)
}
if(coords != 2){org_units_points <- data.frame(X1 = NA,X2 = NA)}
print(org_units_points)
org_units_points
}
kk <- ddply(org_units_metas , .(org_unit_ID) ,
function(ddd) tabGPS(ddd))
tabGPS <- function(string_coordinates){
string_coordinates <- gsub('\\[|\\]', '' , as.character(string_coordinates))
splitcoord <- strsplit(as.character(string_coordinates) , "," , fixed = TRUE)
print(splitcoord)
coords <- length(splitcoord)
print(coords)
if(coords == 2){
org_units_points <- splitcoord
org_units_points <- data.frame(t(org_units_points))
print(org_units_points)
}
if(coords != 2){org_units_points <- data.frame(X1 = NA,X2 = NA)}
print(org_units_points)
org_units_points
}
kk <- ddply(org_units_metas , .(org_unit_ID) ,
function(ddd) tabGPS(ddd))
tabGPS <- function(string_coordinates){
string_coordinates <- gsub('\\[|\\]', '' , as.character(string_coordinates))
splitcoord <- strsplit(as.character(string_coordinates) , "," , fixed = TRUE)
print(splitcoord)
coords <- length(splitcoord)
print(coords)
if(coords == 2){
org_units_points <- splitcoord
org_units_points <- data.frame(t(org_units_points))
print(org_units_points)
}
if(coords != 2){org_units_points <- data.frame(X1 = NA,X2 = NA)}
print(org_units_points)
org_units_points
}
kk <- ddply(org_units_metas , .(org_unit_ID) ,
function(ddd) tabGPS(ddd$coordinates))
table(kk$X1)
tabGPS <- function(string_coordinates){
string_coordinates <- gsub('\\[|\\]', '' , as.character(string_coordinates))
splitcoord <- unlist(strsplit(as.character(string_coordinates) , "," , fixed = TRUE))
print(splitcoord)
coords <- length(splitcoord)
print(coords)
if(coords == 2){
org_units_points <- splitcoord
org_units_points <- data.frame(t(org_units_points))
print(org_units_points)
}
if(coords != 2){org_units_points <- data.frame(X1 = NA,X2 = NA)}
print(org_units_points)
org_units_points
}
kk <- ddply(org_units_metas , .(org_unit_ID) ,
function(ddd) tabGPS(ddd$coordinates))
tabGPS <- function(string_coordinates){
string_coordinates <- gsub('\\[|\\]', '' , as.character(string_coordinates))
splitcoord <- unlist(strsplit(as.character(string_coordinates) , "," , fixed = TRUE))
print(splitcoord)
coords <- length(splitcoord)
print(coords)
if(coords == 2){
org_units_points <- splitcoord
org_units_points <- data.frame(t(org_units_points))
print(org_units_points)
}
if(coords != 2){org_units_points <- data.frame(X1 = NA,X2 = NA)}
print(org_units_points)
org_units_points
}
kk <- ddply(org_units_metas , .(org_unit_ID) ,
function(ddd) tabGPS(ddd$coordinates))
table(kk$X1)
?coordinates
??coordinates
library(maptools)
library(stringr)
library(rgeos)
library(osmar)
library(plyr)
library(raster)
library(ggplot2)
coordinates(kk) = ~ X1+X2
kk <- subset(kk , !is.na(X1))
coordinates(kk) = ~ X1+X2
coordinates(kk) = ~ as.numeric(X1)+as.numeric(X2)
kk$X1 <- as.numeric(kk$X1)
kk$X2 <- as.numeric(kk$X2)
coordinates(kk) = ~ X1+X2
plot(kk)
kenya <- readShapePoly('J://Project/abce/ken/HMIS/addata/Shapefiles/Districts/kenya_districts98.shp')
plot(kenya)
plot(kk , add = TRUE)
devtools::build(binary = TRUE)
devtools::load_all(".")
library(dhisextractr)
library(dhisextractr)
library(dhisextractr)
library(dhisextractr)
extract_geolocalisation(org_units_metas)
library(plyr)
library(maptools)
library(shapefile)
library(shapefiles)
extract_geolocalisation(org_units_metas)
library(dhisextractr)
?convert.to.shapefile
library(dhisextractr)
library(dhisextractr)
